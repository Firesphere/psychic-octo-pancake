{"version":3,"file":"/dist/js/dashboard.js","mappings":"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","sources":["webpack:///./node_modules/@kurkle/color/dist/color.esm.js","webpack:///./node_modules/chart.js/dist/chunks/helpers.dataset.js","webpack:///./node_modules/chart.js/dist/chart.js","webpack:///./node_modules/chart.js/auto/auto.js","webpack:///./client/javascript/src/dashboard/doughnut.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.9\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property,\n            clip\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import {Chart} from 'chart.js/auto';\n\nconst doughnut = document.getElementById('doughnut');\nconst config = {\n    type: 'doughnut',\n    data: {\n        labels: [],\n        datasets: [{\n            label: \"Application status\"\n        }]\n    }\n};\nexport default () => {\n    fetch('/home/getDoughnut', {\n        method: 'GET',\n        headers: {\n            \"x-requested-with\": \"XMLHttpRequest\",\n        }\n    }).then(response => response.json())\n        .then(response => {\n            config['data']['datasets'][0] = response;\n            config['data']['labels'] = response['labels'];\n        }).then(() => {\n        new Chart(doughnut, config);\n    });\n\n}\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","doughnut","fetch","headers","response","json","Chart"],"sourceRoot":""}