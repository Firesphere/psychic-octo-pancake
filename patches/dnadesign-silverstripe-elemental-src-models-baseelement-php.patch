--- /dev/null
+++ ../src/Models/BaseElement.php
@@ -7,6 +7,7 @@
 use DNADesign\Elemental\ORM\FieldType\DBObjectType;
 use DNADesign\Elemental\TopPage\DataExtension;
 use Exception;
+use Psr\SimpleCache\CacheInterface;
 use SilverStripe\CMS\Controllers\CMSPageEditController;
 use SilverStripe\CMS\Model\SiteTree;
 use SilverStripe\Control\Controller;
@@ -76,11 +77,11 @@
     ];
 
     private static $db = [
-        'Title' => 'Varchar(255)',
-        'ShowTitle' => 'Boolean',
-        'Sort' => 'Int',
+        'Title'      => 'Varchar(255)',
+        'ShowTitle'  => 'Boolean',
+        'Sort'       => 'Int',
         'ExtraClass' => 'Varchar(255)',
-        'Style' => 'Varchar(255)'
+        'Style'      => 'Varchar(255)'
     ];
 
     private static $has_one = [
@@ -93,13 +94,13 @@
     ];
 
     private static $casting = [
-        'BlockSchema' => DBObjectType::class,
+        'BlockSchema'   => DBObjectType::class,
         'IsLiveVersion' => DBBoolean::class,
-        'IsPublished' => DBBoolean::class,
-        'canCreate' => DBBoolean::class,
-        'canPublish' => DBBoolean::class,
-        'canUnpublish' => DBBoolean::class,
-        'canDelete' => DBBoolean::class,
+        'IsPublished'   => DBBoolean::class,
+        'canCreate'     => DBBoolean::class,
+        'canPublish'    => DBBoolean::class,
+        'canUnpublish'  => DBBoolean::class,
+        'canDelete'     => DBBoolean::class,
     ];
 
     private static $indexes = [
@@ -383,19 +384,19 @@
                 ->setTitle(_t(__CLASS__ . '.MainTabLabel', 'Content'));
 
             $fields->addFieldsToTab('Root.Main', [
-                HiddenField::create('AbsoluteLink', false, Director::absoluteURL((string) $this->PreviewLink())),
-                HiddenField::create('LiveLink', false, Director::absoluteURL((string) $this->Link())),
-                HiddenField::create('StageLink', false, Director::absoluteURL((string) $this->PreviewLink())),
+                HiddenField::create('AbsoluteLink', false, Director::absoluteURL((string)$this->PreviewLink())),
+                HiddenField::create('LiveLink', false, Director::absoluteURL((string)$this->Link())),
+                HiddenField::create('StageLink', false, Director::absoluteURL((string)$this->PreviewLink())),
             ]);
 
             $styles = $this->config()->get('styles');
 
             if ($styles && count($styles ?? []) > 0) {
-                $styleDropdown = DropdownField::create('Style', _t(__CLASS__.'.STYLE', 'Style variation'), $styles);
+                $styleDropdown = DropdownField::create('Style', _t(__CLASS__ . '.STYLE', 'Style variation'), $styles);
 
                 $fields->insertBefore('ExtraClass', $styleDropdown);
 
-                $styleDropdown->setEmptyString(_t(__CLASS__.'.CUSTOM_STYLES', 'Select a style..'));
+                $styleDropdown->setEmptyString(_t(__CLASS__ . '.CUSTOM_STYLES', 'Select a style..'));
             } else {
                 $fields->removeByName('Style');
             }
@@ -520,7 +521,7 @@
      */
     public function getSearchIndexable(): bool
     {
-        return (bool) $this->config()->get('search_indexable');
+        return (bool)$this->config()->get('search_indexable');
     }
 
     /**
@@ -602,7 +603,15 @@
         $templates = $this->getRenderTemplates();
 
         if ($templates) {
-            return $this->renderWith($templates);
+            $cache = Injector::inst()->get(CacheInterface::class . '.BaseElement');
+            $params = Controller::has_curr() ? Controller::curr()->getRequest()->getVars() : [];
+            unset($params['flush']);
+            $key = base64_encode($this->LastEdited . '_' . $this->ID . '_' . http_build_query($params));
+            if (!($out = $cache->get($key))) {
+                $out = $this->renderWith($templates);
+                $cache->set($key, $out);
+            };
+            return $out;
         }
 
         return null;
@@ -630,10 +639,10 @@
             }
 
             if ($style = $this->Style) {
-                $templates[$class][] = $class . $suffix . '_'. $this->getAreaRelationName() . '_' . $style;
+                $templates[$class][] = $class . $suffix . '_' . $this->getAreaRelationName() . '_' . $style;
                 $templates[$class][] = $class . $suffix . '_' . $style;
             }
-            $templates[$class][] = $class . $suffix . '_'. $this->getAreaRelationName();
+            $templates[$class][] = $class . $suffix . '_' . $this->getAreaRelationName();
             $templates[$class][] = $class . $suffix;
         }
 
@@ -741,7 +750,7 @@
         }
 
         if (!$anchorTitle) {
-            $anchorTitle = 'e'.$this->ID;
+            $anchorTitle = 'e' . $this->ID;
         }
 
         $filter = URLSegmentFilter::create();
@@ -1009,7 +1018,7 @@
      */
     public function getEditLink()
     {
-        return Director::absoluteURL((string) $this->CMSEditLink());
+        return Director::absoluteURL((string)$this->CMSEditLink());
     }
 
     /**
@@ -1069,8 +1078,8 @@
      *
      * To modify the actions, either use the extension point or overload the `provideBlockSchema` method.
      *
+     * @return array
      * @internal This API may change in future. Treat this as a `final` method.
-     * @return array
      */
     public function getBlockSchema()
     {
@@ -1095,10 +1104,10 @@
     {
         return [
             'typeName' => static::getGraphQLTypeName(),
-            'actions' => [
+            'actions'  => [
                 'edit' => $this->getEditLink(),
             ],
-            'content' => $this->getSummary(),
+            'content'  => $this->getSummary(),
         ];
     }
 
@@ -1269,9 +1278,9 @@
      */
     public function EvenOdd()
     {
-        $odd = (bool) ($this->Pos() % 2);
+        $odd = (bool)($this->Pos() % 2);
 
-        return  ($odd) ? 'odd' : 'even';
+        return ($odd) ? 'odd' : 'even';
     }
 
     /**
